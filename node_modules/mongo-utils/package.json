{
  "name": "mongo-utils",
  "description": "Friendly interface to mongodump and mongorestore commands.",
  "keywords": [
    "mongodb",
    "mongodump",
    "mongorestore",
    "heroku",
    "mongohq"
  ],
  "version": "0.4.5",
  "directories": {
    "lib": "./lib"
  },
  "main": "lib/utils.js",
  "dependencies": {
    "heroku": "0.1.x",
    "mongoson": "0.1.x"
  },
  "devDependencies": {
    "coffee-script": "1.6.x",
    "mocha": "~1.9.0"
  },
  "engines": {
    "node": "0.8.x",
    "npm": "1.1.x"
  },
  "optionalDependencies": {},
  "author": {
    "name": "Meryn Stol",
    "email": "merynstol@gmail.com"
  },
  "homepage": "https://github.com/meryn/mongo-utils",
  "repository": {
    "type": "git",
    "url": "git://github.com/meryn/mongo-utils.git"
  },
  "scripts": {
    "prepublish": "npm test",
    "pretest": "make build",
    "test": "make test"
  },
  "readme": "# mongo-utils [![Build Status](https://travis-ci.org/meryn/mongo-utils.png?branch=master)](https://travis-ci.org/meryn/mongo-utils)\n\nmongo-utils provides a friendly interface to MongoDB's mongodump and mongorestore commands, as well as some utility functions.\n\n## Synchronous functions\n \n```coffee\nutils.parseConnectionString connectionString # mongo connection options object\nutils.makeRestoreCommand connectionString, sourceDir # mongorestore ...\nutils.makeDumpCommand connectionString, targetDir # mongodump ...\n```\n\n## Asynchronous functions\n\nThese functions simply wrap [`child_process.exec`](http://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback) in a convenient interface. There is absolutely no validation happening. Thus, the absence of an error (as `err` argument) does not mean the dump or restore succeeded.\n\nI advise to inspect `stdout` and `stderr` yourself if you use this module for any important dumps or restores, or verify the results otherwise.\n\n```coffee\nutils.dumpDatabase connectionString, dirName, (err, stdout, stderr) ->\nutils.dumpHerokuMongoHQDatabase appName, dirName, (err, stdout, stderr) ->\nutils.restoreDatabase connectionString, dirName, (err, stdout, stderr) ->\nutils.dumpHerokuMongoHQDatabase appName, dirName, (err, stdout, stderr) ->\n```\n\nThe heroku-mongohq functions look up the `MONGOHQ_URL` environment variable of your Heroku app, using the [heroku](https://github.com/toots/node-heroku) module.\n\n## Configuration\n\nmongo-utils logs some messages to allow you to see what's going on behind the scenes, primarily when doing the using the dump or restore commands. To see what's being logged, you may assign a log function which takes a single `message` argument to `utils.log`. By default, `utils.log` is a noop.\n\n```coffee\nutils = require \"mongo-utils\"\nutils.log = (msg) -> console.log msg\n```\n\n## Prerequisites\n\nFor the commands to work, you need to have `mongorestore` and `mongodump` in your path.  \nThe Heroku-specific commands require a `HEROKU_API_KEY` environment variable to be set.\n\n## License\n\nmongo-utils is released under the [MIT License](http://opensource.org/licenses/MIT).  \nCopyright (c) 2013 Meryn Stol",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/meryn/mongo-utils/issues"
  },
  "_id": "mongo-utils@0.4.5",
  "_from": "mongo-utils@"
}
